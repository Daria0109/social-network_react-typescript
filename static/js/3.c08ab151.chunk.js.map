{"version":3,"sources":["assets/images/default-avatar.png","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatus/ProfileStatusWithHooks.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx"],"names":["module","exports","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onBlur","updateStatus","autoFocus","onChange","e","currentTarget","onDoubleClick","ProfileInfo","profile","keys","className","c","image_item","image","src","alt","description","avatar","photos","large","userPhoto","aboutMe","Preloader","Post","React","memo","item","message","likesCount","maxLength10","maxLengthValidatorCreator","PostForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","MyPosts","dispatch","useDispatch","postsElement","useSelector","state","profilePage","posts","map","post","key","id","addPost","Profile","ProfileContainer","this","match","getUserProfileTC","getStatus","userId","params","Number","Component","compose","connect","withRouter"],"mappings":"2FAAAA,EAAOC,QAAU,IAA0B,4C,+ECI5B,SAASC,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAEThB,GAAKM,EAAKW,SAAWjB,GAH8CO,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAmB,EAAA,GAA2BpB,EAAKC,IGLjF,WACb,MAAM,IAAIoB,UAAU,6IHIgF,K,oBIJtGxB,EAAOC,QAAU,CAAC,MAAQ,2BAA2B,YAAc,iCAAiC,OAAS,8B,oBCA7GD,EAAOC,QAAU,CAAC,MAAQ,yB,oBCA1BD,EAAOC,QAAU,CAAC,KAAO,qB,iJCwCVwB,EAjCe,SAACC,GAAmC,IAAD,EAChCC,oBAAS,GADuB,mBACzDC,EADyD,KAC/CC,EAD+C,OAEpCF,mBAASD,EAAMI,QAFqB,mBAEzDA,EAFyD,KAEjDC,EAFiD,KAI/DC,qBAAU,WACRD,EAAWL,EAAMI,UAChB,CAACJ,EAAMI,SAYR,OAAO,oCACJF,EACG,6BACA,2BAAOR,MAAOU,EACPG,OAXK,WAClBJ,GAAY,GACZH,EAAMQ,aAAaJ,IAUNK,WAAS,EACTC,SATM,SAACC,GACpBN,EAAUM,EAAEC,cAAclB,WAUpB,6BACA,0BAAMmB,cAnBK,WACjBV,GAAY,KAkB4BH,EAAMI,QAAU,mBCJ7CU,EAnB+B,YAA4C,IAAjCC,EAAgC,EAAhCA,QAASX,EAAuB,EAAvBA,OAAQI,EAAe,EAAfA,aACxE,OAAKzB,OAAOiC,KAAKD,GAASpB,OAIxB,6BACE,yBAAKsB,UAAWC,IAAEC,YAChB,yBAAKF,UAAWC,IAAEE,MAAOC,IAAI,sDAAsDC,IAAI,WAEzF,kBAAC,EAAD,CAAwBlB,OAAQA,EACjBI,aAAcA,IAC7B,yBAAKS,UAAWC,IAAEK,aAChB,yBAAKN,UAAWC,IAAEM,OAAQH,IAAKN,EAAQU,OAAOC,MAAQX,EAAQU,OAAOC,MAAQC,IAAWL,IAAI,WAC5F,6BAAMP,EAAQa,WAXX,kBAACC,EAAA,EAAD,O,oCCCIC,EAXFC,IAAMC,MAAK,SAAChC,GACjB,OACA,yBAAKiB,UAAWC,IAAEe,MACd,yBAAKZ,IAAKrB,EAAMwB,OAAQF,IAAI,WAC3BtB,EAAMkC,QACP,6BACI,8BAAOlC,EAAMmC,WAAb,e,iDCKVC,EAAcC,YAA0B,IAExCC,EAAWP,IAAMC,KAAKO,YAAoB,CAACC,KAAM,QAA3BD,EAAoC,SAACvC,GAC/D,OACE,0BAAMyC,SAAUzC,EAAM0C,cACpB,6BACE,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUC,KAAK,OAAOC,YAAY,cAAcC,SAAU,CAACC,IAAUb,MAEzF,6BACE,kDAmCOc,EArBCnB,IAAMC,MAAK,WAEzB,IAAMmB,EAAWC,cAOXC,EANcC,aAAmD,SAAAC,GAAK,OAAIA,EAAMC,eAMrDC,MAAMC,KAAI,SAAAC,GAAI,OAC7C,kBAAC,EAAD,CAAMC,IAAKD,EAAKE,GAAIA,GAAIF,EAAKE,GACvBrC,OAAQmC,EAAKnC,OACbU,QAASyB,EAAKzB,QACdC,WAAYwB,EAAKxB,gBACzB,OACE,yBAAKlB,UAAWC,IAAEuC,OAChB,kBAACnB,EAAD,CAAUG,SAXI,SAAC/C,GACjByD,EAASW,YAAQpE,EAAMiE,UAWpBN,MCjCQU,EAVuB,YAA4C,IAAjChD,EAAgC,EAAhCA,QAASX,EAAuB,EAAvBA,OAAQI,EAAe,EAAfA,aAC/D,OACC,6BACE,kBAAC,EAAD,CAAaO,QAASA,EACTX,OAAQA,EACRI,aAAcA,IAC3B,kBAAC,EAAD,Q,eCOAwD,E,kLAEiB,IAAD,EAC2BC,KAAKjE,MAA3CkE,EADW,EACXA,MAAOC,EADI,EACJA,iBAAkBC,EADd,EACcA,UAC5BC,EAASH,EAAMI,OAAOD,OACrBA,IACHA,EAAS,SAEXF,EAAiBI,OAAOF,IACxBD,EAAUG,OAAOF,M,+BAET,IAAD,EACiCJ,KAAKjE,MAAtCe,EADA,EACAA,QAASX,EADT,EACSA,OAAQI,EADjB,EACiBA,aACxB,OAAO,kBAAC,EAAD,CAASO,QAASA,EACTX,OAAQA,EACRI,aAAcA,Q,GAfHuB,IAAMyC,WAyBtBC,sBACbC,aAPoB,SAACnB,GAAD,MAA6C,CACjExC,QAASwC,EAAMC,YAAYzC,QAC3BX,OAAQmD,EAAMC,YAAYpD,UAOK,CAAC+D,qBAAkBC,cAAW5D,mBAC7DmE,IAJaF,CAKbT","file":"static/js/3.c08ab151.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/default-avatar.bc560060.png\";","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"image\":\"ProfileInfo_image__2da8F\",\"description\":\"ProfileInfo_description__1Cu2y\",\"avatar\":\"ProfileInfo_avatar__1oUOk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__3QidP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2DReY\"};","import React, {ChangeEvent, useEffect, useState} from 'react';\r\n\r\n\r\ntype ProfileStatusPropsType = {\r\n  status: string\r\n  updateStatus: (status: string) => void\r\n}\r\n\r\nconst ProfileStatusWithHooks =(props: ProfileStatusPropsType) => {\r\n  const[editMode, setEditMode] = useState(false);\r\n  const[status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus((props.status))\r\n  }, [props.status])\r\n\r\n  const onEditMode = () => {\r\n    setEditMode(true)\r\n  }\r\n  const offEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status)\r\n  }\r\n  const changeStatus = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setStatus(e.currentTarget.value)\r\n  }\r\n    return <>\r\n      {editMode\r\n        ? <div>\r\n          <input value={status}\r\n                 onBlur={offEditMode}\r\n                 autoFocus\r\n                 onChange={changeStatus}/>\r\n        </div>\r\n        : <div>\r\n          <span onDoubleClick={onEditMode}>{props.status || \"No status...\"}</span>\r\n        </div>}\r\n    </>\r\n\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React, {FC} from 'react';\r\nimport c from './ProfileInfo.module.css'\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport {ProfileType} from '../../../redux/profile-reducer/profile-reducer';\r\nimport userPhoto from '../../../assets/images/default-avatar.png'\r\nimport ProfileStatusWithHooks from './ProfileStatus/ProfileStatusWithHooks';\r\n\r\ntype ProfileInfoPropsType = {\r\n  profile: ProfileType\r\n  status: string\r\n  updateStatus: (status: string) => void\r\n}\r\nconst ProfileInfo: FC<ProfileInfoPropsType> = function ({profile, status, updateStatus}) {\r\n  if (!Object.keys(profile).length) {\r\n    return <Preloader/>\r\n  }\r\n  return (\r\n    <div>\r\n      <div className={c.image_item}>\r\n        <img className={c.image} src=\"https://miro.medium.com/max/8576/0*zBu6EBAwjXXXHz-z\" alt=\"Image\"/>\r\n      </div>\r\n      <ProfileStatusWithHooks status={status}\r\n                     updateStatus={updateStatus}/>\r\n      <div className={c.description}>\r\n        <img className={c.avatar} src={profile.photos.large ? profile.photos.large : userPhoto} alt=\"Avatar\"/>\r\n        <div>{profile.aboutMe}</div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport c from './Post.module.css'\r\nimport {PostType} from '../../../../redux/profile-reducer/profile-reducer';\r\n\r\nconst Post = React.memo((props: PostType) => {\r\n        return (\r\n        <div className={c.item}>\r\n            <img src={props.avatar} alt=\"Avatar\"/>\r\n            {props.message}\r\n            <div>\r\n                <span>{props.likesCount} likes</span>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\nexport default Post","import React from 'react';\r\nimport c from './MyPosts.module.css'\r\nimport Post from './Post/Post';\r\nimport {\r\n  addPost,\r\n  PostType,\r\n  ProfileInitialStateType,\r\n  ProfileReducerType\r\n} from '../../../redux/profile-reducer/profile-reducer'\r\nimport {Field, reduxForm, InjectedFormProps} from 'redux-form';\r\nimport {maxLengthValidatorCreator, required} from '../../utilities/validators/validators';\r\nimport {Textarea} from '../../common/FormControls/FormControls';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStateType} from '../../../redux/redux-store';\r\n\r\nconst maxLength10 = maxLengthValidatorCreator(10)\r\n\r\nconst PostForm = React.memo(reduxForm<any, any>({form: 'post'})((props: InjectedFormProps<any>) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field component={Textarea} name='post' placeholder='New post...' validate={[required, maxLength10]}/>\r\n      </div>\r\n      <div>\r\n        <button>Add Post</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}))\r\n\r\n// type MyPostsPropsType = {\r\n//   profilePage: ProfileReducerType\r\n//   addPost: (post: string) => void\r\n// }\r\ntype PostValuePropsType = {\r\n  post: string\r\n}\r\n\r\nconst MyPosts = React.memo(() =>  {\r\n  // debugger\r\n  const dispatch = useDispatch();\r\n  const profilePage = useSelector<AppStateType, ProfileInitialStateType>(state => state.profilePage);\r\n\r\n  const onAddPost = (value: PostValuePropsType) => {\r\n    dispatch(addPost(value.post));\r\n  }\r\n\r\n  const postsElement = profilePage.posts.map(post =>\r\n    <Post key={post.id} id={post.id}\r\n          avatar={post.avatar}\r\n          message={post.message}\r\n          likesCount={post.likesCount}/>)\r\n  return (\r\n    <div className={c.posts}>\r\n      <PostForm onSubmit={onAddPost}/>\r\n      {postsElement}\r\n    </div>\r\n  )\r\n})\r\nexport default MyPosts","import React, {FC} from 'react';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPosts from './MyPosts/MyPosts';\r\nimport {ProfileType} from '../../redux/profile-reducer/profile-reducer';\r\n\r\n\r\nexport type ProfilePropsType = {\r\n  profile: ProfileType\r\n  status: string\r\n  updateStatus: (status: string) => void\r\n}\r\n\r\nconst Profile: FC<ProfilePropsType> = function ({profile, status, updateStatus}) {\r\n   return (\r\n    <div>\r\n      <ProfileInfo profile={profile}\r\n                   status={status}\r\n                   updateStatus={updateStatus}/>\r\n      <MyPosts/>\r\n    </div>\r\n  )\r\n}\r\nexport default Profile","import React, {ComponentType} from 'react';\r\nimport Profile from './Profile';\r\nimport {connect} from 'react-redux';\r\nimport {AppStateType} from '../../redux/redux-store';\r\nimport {getStatus, getUserProfileTC, ProfileType, updateStatus} from '../../redux/profile-reducer/profile-reducer';\r\nimport {withRouter, RouteComponentProps} from 'react-router-dom';\r\nimport {withAuthRedirect} from '../../hoc/WithAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\ntype MapStatePropsType = {\r\n  profile: ProfileType\r\n  status: string\r\n}\r\ntype MapDispatchPropsType = {\r\n  getUserProfileTC: (userId: number) => void\r\n  getStatus: (userId: number) => void\r\n  updateStatus: (status: string) => void\r\n}\r\nexport type PathParamType = {\r\n  userId: string\r\n}\r\nexport type ProfileContainerPropsType = RouteComponentProps<PathParamType>\r\n  & MapStatePropsType\r\n  & MapDispatchPropsType\r\n\r\nclass ProfileContainer extends React.Component<ProfileContainerPropsType> {\r\n\r\n  componentDidMount() {\r\n    const {match, getUserProfileTC, getStatus} = this.props;\r\n    let userId = match.params.userId;\r\n    if (!userId) {\r\n      userId = \"12281\";\r\n    }\r\n    getUserProfileTC(Number(userId));\r\n    getStatus(Number(userId))\r\n  }\r\n  render() {\r\n    const {profile, status, updateStatus} = this.props;\r\n    return <Profile profile={profile}\r\n                    status={status}\r\n                    updateStatus={updateStatus}/>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStatePropsType => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status\r\n})\r\n\r\n\r\nexport default compose<ComponentType>(\r\n  connect<MapStatePropsType,\r\n  MapDispatchPropsType, {},\r\n  AppStateType>(mapStateToProps, {getUserProfileTC, getStatus, updateStatus}),\r\n  withRouter\r\n)(ProfileContainer)"],"sourceRoot":""}