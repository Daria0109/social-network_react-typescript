{"version":3,"sources":["redux/dialogs-reducer/dialogs-reducer.tsx","redux/users-reducer/users-reducer.tsx","components/utilities/helpers/object-helpers.ts","assets/images/preloader.gif","assets/images/404-error.jpg","assets/images/default-avatar.png","components/Navbar/Navbar.module.css","components/common/FormControls/FormControls.tsx","redux/auth-reducer/auth-reducer.tsx","redux/navbar-reducer/navbar-reducer.tsx","redux/app-reducer/app-reducer.ts","redux/redux-store.tsx","components/Navbar/Friends/Friend/Friend.tsx","components/Navbar/Friends/Friends.tsx","components/Navbar/Friends/FriendsContainer.tsx","components/Navbar/Navbar.tsx","components/News/News.tsx","components/Music/Music.tsx","components/Settings/Settings.tsx","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","components/Login/Login.tsx","hoc/withSuspense.tsx","components/common/Error404/Error404.tsx","App.tsx","index.tsx","components/Header/Header.module.css","components/common/Error404/Error404.module.css","components/utilities/validators/validators.ts","components/common/FormControls/FormControls.module.css","components/common/Preloader/Preloader.tsx","components/Navbar/Friends/Friend/Friend.module.css","api/api.ts","components/Navbar/Friends/Friends.module.css","redux/profile-reducer/profile-reducer.tsx"],"names":["actions","dialogsActions","addMessage","message","type","ADD_MESSAGE","initialState","dialogs","id","name","avatar","defaultAvatar","messages","text","dialogsReducer","state","action","updateObjInArray","items","itemId","objProp","newObjProps","map","item","usersActions","follow","userId","FOLLOW","unfollow","UNFOLLOW","setUsers","users","SET_USERS","setCurrentPage","pageNumber","SET_CURRENT_PAGE","setTotalUsersCount","totalUsers","SET_TOTAL_USERS_COUNT","toggleIsFetching","isFetching","TOGGLE_IS_FETCHING","toggleFollowingProgress","isFollowingProgress","TOGGLE_FOLLOWING_PROGRESS","setFilter","filter","SET_FILTER","payload","getUsers","currentPage","pageSize","dispatch","a","usersAPI","term","friend","totalCount","followUnfollowFlow","apiMethod","actionCreator","resultCode","ResultCodes","Success","followUsers","bind","unfollowUsers","totalUsersCount","portionSize","followingInProgress","usersReducer","followed","module","exports","FormControl","input","meta","children","havingError","touched","error","className","s","formControl","Textarea","props","restProps","Input","createForm","component","placeholder","validators","validate","friends","navbarReducer","authActions","email","login","isAuth","SET_AUTH_USER_DATA","captchaUrl","GET_CAPTCHA_SUCCESS","getAuthUserData","authAPI","getAuth","data","getCaptcha","securityAPI","response","url","authReducer","appActions","INITIALIZED_SUCCESS","initialized","appReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","usersPage","navbar","auth","form","formReducer","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","Friend","to","c","src","alt","Friends","friendElement","key","friends__section","FriendsContainer","connect","Navbar","nav","activeClassName","active","News","Music","Settings","Header","logout","header","logo_block","logo","login_block","onClick","HeaderContainer","this","React","Component","maxLength20","maxLengthValidatorCreator","LoginForm","reduxForm","handleSubmit","onSubmit","required","errorSubmit","Login","useSelector","useDispatch","formData","password","rememberMe","captcha","ResultCodeForCaptcha","CaptchaIsRequired","length","stopSubmit","_error","withSuspense","WrappedComponent","Suspense","fallback","Preloader","Error404","error_block","error_img","errorImage","error_text","error_header","error_paragraph","DialogsContainer","lazy","UsersPage","ProfilePage","PATH","SuspendedProfile","SuspendedDialogs","SuspendedUsers","App","initializeApp","exact","path","render","rerenderEntireTree","ReactDOM","document","getElementById","subscribe","value","undefined","max","preloader","instance","axios","create","baseURL","withCredentials","headers","get","then","res","post","delete","profileAPI","getUserProfile","getStatus","updateStatus","status","put","uploadPhoto","photo","FormData","append","updateProfile","profile","profileActions","addPost","ADD_POST","setUserProfile","SET_USER_PROFILE","setStatus","SET_STATUS","savePhotoSuccess","photos","SAVE_PHOTO_SUCCESS","setEditModeProfile","editMode","SET_EDIT_MODE_PROFILE","savePhoto","saveProfile","getState","posts","likesCount","newPost"],"mappings":"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","file":"static/js/main.08f684af.chunk.js","sourcesContent":["import {DialogType, InferActionsTypes, MessageType} from '../types/types';\r\nimport defaultAvatar from '../../assets/images/default-avatar.png';\r\n\r\n\r\nenum actions {\r\n  ADD_MESSAGE = 'samurai-network/dialogs/ADD-MESSAGE'\r\n}\r\n\r\n// A c t i o n  C r e a t o r s\r\nexport const dialogsActions = {\r\n  addMessage: (message: string) => ({type: actions.ADD_MESSAGE, message} as const)\r\n}\r\nexport type DialogsActionsTypes = InferActionsTypes<typeof dialogsActions>;\r\n\r\n// I n i t i a l  S t a t e\r\nlet initialState = {\r\n  dialogs: [\r\n    {id: 1, name: 'Dimych', avatar: defaultAvatar},\r\n    {id: 2, name: 'Viktor', avatar: defaultAvatar},\r\n    {id: 3, name: 'Sveta', avatar: defaultAvatar},\r\n    {id: 4, name: 'Valera', avatar: defaultAvatar},\r\n    {id: 5, name: 'Sasha', avatar: defaultAvatar},\r\n    {id: 6, name: 'Ignat', avatar: defaultAvatar},\r\n    {id: 7, name: 'Valera', avatar: defaultAvatar}\r\n  ] as Array<DialogType>,\r\n  messages: [\r\n    {id: 1, text: 'Hi!'},\r\n    {id: 2, text: 'How are you!'},\r\n    {id: 3, text: 'Hello, my friend!'}\r\n  ] as Array <MessageType>\r\n}\r\nexport type DialogsInitialStateType = typeof initialState;\r\n\r\n\r\n// R e d u c e r\r\nlet dialogsReducer = (state = initialState, action: DialogsActionsTypes): DialogsInitialStateType => {\r\n  switch (action.type) {\r\n    case actions.ADD_MESSAGE:\r\n      return {\r\n        ...state,\r\n        messages: [...state.messages,\r\n          {\r\n            id: 4,\r\n            text: action.message\r\n          }\r\n        ]\r\n      }\r\n   default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default dialogsReducer;","import {ApiResponseType, ResultCodes, usersAPI} from '../../api/api';\r\nimport {Dispatch} from 'react';\r\nimport {updateObjInArray} from '../../components/utilities/helpers/object-helpers';\r\nimport {InferActionsTypes, Nullable, ThunkType, UsersSearchFormType, UserType} from '../types/types';\r\n\r\n\r\nenum actions {\r\n  FOLLOW = 'samurai-network/users/FOLLOW',\r\n  UNFOLLOW = 'samurai-network/users/UNFOLLOW',\r\n  SET_USERS = 'samurai-network/users/SET-USERS',\r\n  SET_CURRENT_PAGE = 'samurai-network/users/SET-CURRENT-PAGE',\r\n  SET_TOTAL_USERS_COUNT = 'samurai-network/users/SET-TOTAL-USERS-COUNT',\r\n  TOGGLE_IS_FETCHING = 'samurai-network/users/TOGGLE-IS-FETCHING',\r\n  TOGGLE_FOLLOWING_PROGRESS = 'samurai-network/users/TOGGLE-FOLLOWING-PROGRESS',\r\n  SET_FILTER = 'samurai-network/users/SET_FILTER'\r\n}\r\n\r\n// A c t i o n  C r e a t o r s\r\nexport const usersActions = {\r\n  follow: (userId: number) => ({type: actions.FOLLOW, userId} as const),\r\n  unfollow: (userId: number) => ({type: actions.UNFOLLOW, userId} as const),\r\n  setUsers: (users: Array<UserType>) => ({type: actions.SET_USERS, users} as const),\r\n  setCurrentPage: (pageNumber: number) => ({type: actions.SET_CURRENT_PAGE, pageNumber} as const),\r\n  setTotalUsersCount: (totalUsers: number) => ({type: actions.SET_TOTAL_USERS_COUNT, totalUsers} as const),\r\n  toggleIsFetching: (isFetching: boolean) => ({type: actions.TOGGLE_IS_FETCHING, isFetching} as const),\r\n  toggleFollowingProgress: (isFollowingProgress: boolean, userId: number) => ({\r\n    type: actions.TOGGLE_FOLLOWING_PROGRESS, isFollowingProgress, userId\r\n  } as const),\r\n  setFilter: (filter: UsersSearchFormType) => ({type: actions.SET_FILTER, payload: filter} as const)\r\n}\r\nexport type UsersActionsType = InferActionsTypes<typeof usersActions>;\r\n\r\n\r\n// T h u n k  C r e a t o r s\r\nexport type UsersThunkType = ThunkType<UsersActionsType>;\r\nexport const getUsers = (currentPage: number, pageSize: number, filter: UsersSearchFormType): UsersThunkType => {\r\n  return async (dispatch) => {\r\n    dispatch(usersActions.toggleIsFetching(true));\r\n    dispatch(usersActions.setCurrentPage(currentPage));\r\n    dispatch(usersActions.setFilter(filter))\r\n    let users = await usersAPI.getUsers(currentPage, pageSize, filter.term, filter.friend);\r\n    dispatch(usersActions.toggleIsFetching(false));\r\n    dispatch(usersActions.setUsers(users.items));\r\n    dispatch(usersActions.setTotalUsersCount(users.totalCount))\r\n  }\r\n}\r\nconst followUnfollowFlow = async (dispatch: Dispatch<UsersActionsType>, userId: number,\r\n                                  apiMethod: (userId: number) => Promise<ApiResponseType>,\r\n                                  actionCreator: (userId: number) =>\r\n                                  ReturnType<typeof usersActions.follow> | ReturnType<typeof usersActions.unfollow>) => {\r\n  dispatch(usersActions.toggleFollowingProgress(true, userId));\r\n  let result = await apiMethod(userId);\r\n  if (result.resultCode === ResultCodes.Success) {\r\n    dispatch(actionCreator(userId))\r\n  }\r\n  dispatch(usersActions.toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId: number): UsersThunkType => {\r\n  return async (dispatch) => {\r\n    const apiMethod = usersAPI.followUsers.bind(usersAPI);\r\n    await followUnfollowFlow(dispatch, userId, apiMethod, usersActions.follow)\r\n  }\r\n}\r\nexport const unfollow = (userId: number): UsersThunkType => {\r\n  return async (dispatch) => {\r\n    const apiMethod = usersAPI.unfollowUsers.bind(usersAPI);\r\n    await followUnfollowFlow(dispatch, userId, apiMethod, usersActions.unfollow)\r\n  }\r\n}\r\n\r\n// I n i t i a l  S t a t e\r\nlet initialState = {\r\n  users: [] as Array<UserType>,\r\n  pageSize: 5,\r\n  totalUsersCount: 0,\r\n  currentPage: 1,\r\n  portionSize: 10,\r\n  isFetching: true,\r\n  followingInProgress: [] as Array<number>,\r\n  filter: {\r\n    term: '',\r\n    friend: null as Nullable<boolean>\r\n  } as UsersSearchFormType\r\n\r\n}\r\nexport type UsersInitialStateType = typeof initialState;\r\n\r\n\r\n// R e d u c e r\r\nlet usersReducer = (state = initialState, action: UsersActionsType): UsersInitialStateType => {\r\n  switch (action.type) {\r\n    case actions.FOLLOW:\r\n      return {\r\n        ...state,\r\n        users: updateObjInArray(state.users, action.userId, 'id', {followed: true})\r\n      }\r\n    case actions.UNFOLLOW:\r\n      return {\r\n        ...state,\r\n        users: updateObjInArray(state.users, action.userId, 'id', {followed: false})\r\n      };\r\n    case actions.SET_USERS:\r\n      return {\r\n        ...state,\r\n        users: action.users\r\n      }\r\n    case actions.SET_CURRENT_PAGE:\r\n      return {\r\n        ...state,\r\n        currentPage: action.pageNumber\r\n      }\r\n    case actions.SET_TOTAL_USERS_COUNT:\r\n      return {\r\n        ...state,\r\n        totalUsersCount: action.totalUsers\r\n      }\r\n    case actions.TOGGLE_IS_FETCHING:\r\n      return {\r\n        ...state,\r\n        isFetching: action.isFetching\r\n      }\r\n\r\n    case actions.TOGGLE_FOLLOWING_PROGRESS:\r\n      return {\r\n        ...state,\r\n        followingInProgress: action.isFollowingProgress\r\n          ? [...state.followingInProgress, action.userId]\r\n          : state.followingInProgress.filter(id => id !== action.userId)\r\n      }\r\n    case actions.SET_FILTER:\r\n      return {\r\n        ...state,\r\n        filter: action.payload\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\nexport default usersReducer;","export const updateObjInArray = (items: Array<any>, itemId: number,\r\n                                 objProp: string, newObjProps: {[key: string]: any}) => {\r\n  return items.map(item => {\r\n    return item[objProp] === itemId ? {...item, ...newObjProps} : item\r\n  })\r\n}","module.exports = __webpack_public_path__ + \"static/media/preloader.f876d4b4.gif\";","module.exports = __webpack_public_path__ + \"static/media/404-error.3928156a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/default-avatar.bc560060.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__mTtkA\",\"item\":\"Navbar_item__2Y4wl\",\"active\":\"Navbar_active__3-pQo\"};","import React from 'react';\r\nimport {WrappedFieldInputProps, WrappedFieldMetaProps} from 'redux-form/lib/Field';\r\nimport s from './FormControls.module.css'\r\nimport {Field} from 'redux-form';\r\nimport {FieldValidatorType} from '../../utilities/validators/validators';\r\nimport {Nullable} from '../../../redux/types/types';\r\n\r\n\r\nexport interface WrappedFieldProps {\r\n  input: WrappedFieldInputProps;\r\n  meta: WrappedFieldMetaProps;\r\n}\r\n\r\nexport const FormControl: React.FC<WrappedFieldProps> = (\r\n  {input, meta, children, ...restProps}) => {\r\n  const havingError = meta.touched && meta.error;\r\n  return (\r\n    <div className={`${s.formControl} ${havingError ? s.error : ''}`}>\r\n      <div>\r\n        {children}\r\n      </div>\r\n      {havingError && <span>{meta.error}</span>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const Textarea: React.FC<WrappedFieldProps> = (props) => {\r\n  const {input, meta, ...restProps} = props;\r\n  return (\r\n    <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\r\n  )\r\n}\r\n\r\nexport const Input = (props: WrappedFieldProps) => {\r\n  const {input, meta, ...restProps} = props;\r\n  return (\r\n    <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n  )\r\n}\r\n\r\nexport function createForm<KeyFormProps extends string>(component: React.FC<WrappedFieldProps> | 'input' | 'textarea',\r\n                                         name: KeyFormProps,\r\n                                         placeholder: Nullable<string>,\r\n                                         validators: Array<FieldValidatorType>,\r\n                                         props = {}, text = '') {\r\n  return <div>\r\n    <Field component={component}\r\n           name={name}\r\n           placeholder={placeholder}\r\n           validate={validators}\r\n           {...props}/>\r\n    {text}\r\n  </div>\r\n}","import {authAPI, ResultCodeForCaptcha, ResultCodes, securityAPI} from '../../api/api';\r\nimport {stopSubmit} from 'redux-form';\r\nimport {FormAction} from 'redux-form/lib/actions';\r\nimport {InferActionsTypes, Nullable, ThunkType} from '../types/types';\r\n\r\n\r\nenum actions {\r\n  SET_AUTH_USER_DATA = 'samurai-network/auth/SET-AUTH-USER-DATA',\r\n  GET_CAPTCHA_SUCCESS = 'samurai-network/auth/GET_CAPTCHA_SUCCESS'\r\n}\r\n\r\n// A c t i o n  C r e a t o r s\r\nexport const authActions = {\r\n  setAuthUserData: (id: number | null, email: string | null, login: string | null, isAuth: boolean) => ({\r\n    type: actions.SET_AUTH_USER_DATA, payload: {id, email, login}, isAuth\r\n  } as const),\r\n  getCaptchaSuccess: (captchaUrl: string) => ({\r\n    type: actions.GET_CAPTCHA_SUCCESS, captchaUrl\r\n  } as const)\r\n}\r\nexport type AuthActionsType = InferActionsTypes<typeof authActions>\r\ntype ThunkActionsType = AuthActionsType | FormAction\r\n\r\n// T h u n k  C r e a t o r s\r\nexport type AuthThunkType = ThunkType<ThunkActionsType>\r\nexport const getAuthUserData = (): AuthThunkType => {\r\n  return async (dispatch) => {\r\n    const data = await authAPI.getAuth();\r\n    if (data.resultCode === ResultCodes.Success) {\r\n      let {id, email, login} = data.data;\r\n      dispatch(authActions.setAuthUserData(id, email, login, true));\r\n    }\r\n  }\r\n}\r\nexport const login = (email: string, password: string, rememberMe: boolean, captcha: string): AuthThunkType => {\r\n  return async (dispatch) => {\r\n    const data = await authAPI.login(email, password, rememberMe, captcha);\r\n    if (data.resultCode === ResultCodes.Success) {\r\n      dispatch(getAuthUserData());\r\n    } else {\r\n      if (data.resultCode === ResultCodeForCaptcha.CaptchaIsRequired) {\r\n        dispatch(getCaptcha())\r\n      }\r\n      let message = data.messages.length > 0 ? data.messages[0] : 'Another error'\r\n      dispatch(stopSubmit('login', {_error: message}))\r\n    }\r\n  }\r\n}\r\nexport const logout = (): AuthThunkType => {\r\n  return async (dispatch) => {\r\n    const data = await authAPI.logout();\r\n    if (data.resultCode === 0) {\r\n      dispatch(authActions.setAuthUserData(null, null, null, false));\r\n    }\r\n  }\r\n}\r\nexport const getCaptcha = (): AuthThunkType => {\r\n  return async (dispatch) => {\r\n    const response = await securityAPI.getCaptcha();\r\n    const captchaUrl = response.url;\r\n    dispatch(authActions.getCaptchaSuccess(captchaUrl))\r\n  }\r\n}\r\n\r\n// I n i t i a l  S t a t e\r\nconst initialState = {\r\n  id: null as Nullable<number>,\r\n  email: null as Nullable<string>,\r\n  login: null as Nullable<string>,\r\n  isAuth: false,\r\n  captchaUrl: null as Nullable<string>\r\n}\r\nexport type AuthInitialStateType = typeof initialState;\r\n\r\n// R e d u c e r\r\nconst authReducer = (state = initialState, action: AuthActionsType): AuthInitialStateType => {\r\n  switch (action.type) {\r\n    case actions.SET_AUTH_USER_DATA:\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        isAuth: action.isAuth\r\n      };\r\n    case actions.GET_CAPTCHA_SUCCESS:\r\n      return {\r\n        ...state,\r\n        captchaUrl: action.captchaUrl\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\nexport default authReducer;","import {FriendType} from '../types/types';\r\nimport defaultAvatar from '../../assets/images/default-avatar.png'\r\n\r\n\r\nlet initialState = {\r\n    friends: [\r\n        {id: 1, name: 'Dimych', avatar: defaultAvatar},\r\n        {id: 2, name: 'Viktor', avatar: defaultAvatar},\r\n        {id: 3, name: 'Sveta', avatar: defaultAvatar},\r\n        {id: 4, name: 'Valera', avatar: defaultAvatar},\r\n        {id: 5, name: 'Sasha', avatar: defaultAvatar},\r\n        {id: 6, name: 'Ignat', avatar: defaultAvatar},\r\n        {id: 7, name: 'Valera', avatar: defaultAvatar}\r\n    ] as Array<FriendType>\r\n}\r\ntype NavbarInitialStateType = typeof initialState;\r\n\r\nlet navbarReducer = (state = initialState, action: any):NavbarInitialStateType => {\r\nreturn state;\r\n}\r\n\r\nexport default navbarReducer;","import {getAuthUserData} from '../auth-reducer/auth-reducer';\r\nimport {InferActionsTypes, ThunkType} from '../types/types';\r\n\r\n\r\nenum actions {\r\n  INITIALIZED_SUCCESS = 'samurai-network/app/INITIALIZED-SUCCESS',\r\n}\r\n\r\n// A c t i o n  C r e a t o r s\r\nexport const appActions = {\r\n  setInitializedSuccess: () => ({type: actions.INITIALIZED_SUCCESS} as const)\r\n}\r\n\r\nexport type AppActionsType = InferActionsTypes<typeof appActions>;\r\n\r\n// T h u n k  C r e a t o r s\r\nexport type AppThunkType = ThunkType<AppActionsType>\r\nexport const initializeApp = (): AppThunkType => {\r\n  return async (dispatch) => {\r\n    await dispatch(getAuthUserData());\r\n    dispatch(appActions.setInitializedSuccess())\r\n  }\r\n}\r\n\r\n// I n i t i a l  S t a t e\r\nconst initialState = {\r\n  initialized: false\r\n}\r\nexport type AppInitialStateType = typeof initialState;\r\n\r\n\r\n// R e d u s e r\r\nconst appReducer = (state = initialState, action: AppActionsType): AppInitialStateType => {\r\n  switch (action.type) {\r\n    case actions.INITIALIZED_SUCCESS:\r\n      return {\r\n        ...state,\r\n        initialized: true\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\nexport default appReducer;","import {createStore, combineReducers, applyMiddleware, compose} from 'redux';\r\nimport profileReducer from './profile-reducer/profile-reducer';\r\nimport dialogsReducer from './dialogs-reducer/dialogs-reducer';\r\nimport navbarReducer from './navbar-reducer/navbar-reducer';\r\nimport usersReducer from './users-reducer/users-reducer';\r\nimport authReducer from './auth-reducer/auth-reducer';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport {reducer as formReducer} from 'redux-form'\r\nimport appReducer from './app-reducer/app-reducer';\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    navbar: navbarReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\nexport type AppStateType = ReturnType<typeof reducers>\r\n\r\n\r\n\r\n// let store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n// @ts-ignore\r\nwindow.store = store;\r\n\r\nexport default store;","import {NavLink} from 'react-router-dom';\r\nimport React from 'react';\r\nimport c from './Friend.module.css'\r\n\r\n\r\ntype FriendPropsType = {\r\n    id: number\r\n    name: string\r\n    avatar: string\r\n}\r\nconst Friend = function (props: FriendPropsType) {\r\n        return (\r\n        <NavLink to={`/profile/${props.name}`}>\r\n        <div className={c.friend}>\r\n            <img className={c.avatar} src={props.avatar} alt={props.name}/>\r\n            <div className={c.name}>{props.name}</div>\r\n        </div>\r\n    </NavLink>\r\n    )\r\n}\r\nexport default Friend;","import React from 'react';\r\nimport c from './Friends.module.css'\r\nimport Friend from './Friend/Friend';\r\nimport {FriendType} from '../../../redux/types/types';\r\n\r\ntype FriendsPropsType = {\r\n        friends: Array<FriendType>\r\n}\r\nconst Friends = function (props: FriendsPropsType) {\r\n\r\n    const friendElement = props.friends.map(friend =>\r\n        <Friend key={friend.id} id={friend.id} name={friend.name} avatar={friend.avatar}/>)\r\n\r\n    return (\r\n        <div className={c.friends}>\r\n            <h3>Friends</h3>\r\n            <div className={c.friends__section}>\r\n                {friendElement}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Friends;","import {connect} from 'react-redux';\r\nimport Friends from './Friends';\r\nimport {AppStateType} from '../../../redux/redux-store';\r\nimport {FriendType} from '../../../redux/types/types';\r\n\r\ntype MapStatePropsType = {\r\n    friends: Array<FriendType>\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        friends: state.navbar.friends\r\n    }\r\n}\r\nconst  mapDispatchToProps = (dispatch: () => void) => {\r\n    return {\r\n    }\r\n}\r\n\r\nconst FriendsContainer = connect<MapStatePropsType, {}, {}, AppStateType>\r\n(mapStateToProps, mapDispatchToProps)(Friends);\r\nexport default FriendsContainer;","import React from 'react';\r\nimport c from './Navbar.module.css'\r\nimport {NavLink} from 'react-router-dom';\r\nimport Friends from './Friends/Friends';\r\nimport FriendsContainer from './Friends/FriendsContainer';\r\n\r\n\r\ntype NavbarPropsType = {\r\n    // store: RootStoreType\r\n}\r\n\r\nconst Navbar = function (props: NavbarPropsType) {\r\n    // let state = props.store;\r\n        return (\r\n        <nav className={c.nav}>\r\n            <div className={c.item}><NavLink to='/profile' activeClassName={c.active}>Profile</NavLink></div>\r\n            <div className={c.item}><NavLink to='/dialogs' activeClassName={c.active}>Messages</NavLink></div>\r\n            <div className={c.item}><NavLink to='/users' activeClassName={c.active}>Users</NavLink></div>\r\n            <div className={c.item}><NavLink to='/news' activeClassName={c.active}>News</NavLink></div>\r\n            <div className={c.item}><NavLink to='/music' activeClassName={c.active}>Music</NavLink></div>\r\n            <div className={c.item}><NavLink to='/settings' activeClassName={c.active}>Settings</NavLink></div>\r\n\r\n            <FriendsContainer/>\r\n\r\n        </nav>\r\n\r\n    )\r\n}\r\nexport default Navbar","import React from 'react';\r\n\r\nconst News = function() {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n}\r\nexport default News;","import React from 'react';\r\n\r\nconst Music = function() {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\nexport default Music;","import React from 'react';\r\n\r\nconst Settings = function () {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\nexport default Settings;","import React, {FC} from 'react';\r\nimport c from './Header.module.css'\r\nimport {NavLink} from 'react-router-dom';\r\n\r\ntype HeaderPropsType = {\r\n  login: string | null\r\n  isAuth: boolean\r\n  logout: () => void\r\n}\r\n\r\nconst Header: FC<HeaderPropsType> = function ({login, isAuth, logout}) {\r\n  return (\r\n    <header className={c.header}>\r\n      <div className={c.logo_block}>\r\n        <img className={c.logo} src=\"https://www.freelogodesign.org/Content/img/logo-samples/flooop.png\" alt=\"Logo\"/>\r\n      </div>\r\n      <div className={c.login_block}>\r\n        {isAuth\r\n          ? <div className={c.login}>\r\n            {login}\r\n            <button onClick={() => logout()}>LogOut</button>\r\n          </div>\r\n          : <NavLink to='/login'>LogIn</NavLink>}\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\nexport default Header","import React from 'react';\r\nimport Header from './Header';\r\nimport {connect} from 'react-redux';\r\nimport {AppStateType} from '../../redux/redux-store';\r\nimport {logout} from '../../redux/auth-reducer/auth-reducer';\r\n\r\ntype MapStatePropsType = {\r\n  login: string | null\r\n  isAuth: boolean\r\n}\r\ntype MapDispatchPropsType = {\r\n  logout: () => void\r\n}\r\nexport type HeaderContainerPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\nclass HeaderContainer extends React.Component<HeaderContainerPropsType> {\r\n  render () {\r\n    const {login, isAuth, logout} = this.props;\r\n    return <Header login={login} isAuth={isAuth} logout={logout}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => ({\r\n  login: state.auth.login,\r\n  isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect<MapStatePropsType,\r\n  MapDispatchPropsType, {},\r\n  AppStateType>(mapStateToProps, {logout})\r\n(HeaderContainer);\r\n","import React from 'react';\r\nimport {DecoratedComponentClass, DecoratedFormProps, reduxForm} from 'redux-form';\r\nimport {maxLengthValidatorCreator, required} from '../utilities/validators/validators';\r\nimport {createForm, Input} from '../common/FormControls/FormControls';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStateType} from '../../redux/redux-store';\r\nimport {login} from '../../redux/auth-reducer/auth-reducer';\r\nimport {Redirect} from 'react-router-dom';\r\nimport s from '../common/FormControls/FormControls.module.css'\r\nimport {Nullable} from '../../redux/types/types';\r\n\r\n\r\ntype LoginFormOwnPropsType = {\r\n  captchaUrl: Nullable<string>\r\n}\r\n\r\nconst maxLength20 = maxLengthValidatorCreator(20);\r\nconst LoginForm: DecoratedComponentClass<LoginFormValuesPropsType, DecoratedFormProps<LoginFormValuesPropsType, LoginFormOwnPropsType>> =\r\n  reduxForm<LoginFormValuesPropsType, LoginFormOwnPropsType>({form: 'login'})(\r\n    ({handleSubmit, captchaUrl, error}) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      {createForm<LoginFormKeysType>(Input, 'email', 'Email...', [required, maxLength20])}\r\n      {createForm<LoginFormKeysType>(Input, 'password', 'Password...', [required, maxLength20])}\r\n      {createForm<LoginFormKeysType>('input', 'rememberMe', null, [], {type: 'checkbox'}, 'remember me')}\r\n\r\n      {captchaUrl && <img src={captchaUrl}/>}\r\n      {captchaUrl && createForm<LoginFormKeysType>(Input, 'captcha', 'Enter symbols...', [required])}\r\n      {error && <div className={s.errorSubmit}>{error}</div>}\r\n      <button>Submit</button>\r\n    </form>\r\n  )\r\n})\r\n\r\n\r\n\r\ntype LoginFormValuesPropsType = {\r\n  email: string\r\n  password: string\r\n  rememberMe: boolean\r\n  captcha: string\r\n}\r\ntype LoginFormKeysType = Extract<keyof LoginFormValuesPropsType, string>\r\n\r\nconst Login: React.FC = ({}) => {\r\n  const isAuth = useSelector<AppStateType, boolean>(state => state.auth.isAuth);\r\n  const captchaUrl = useSelector<AppStateType, Nullable<string>>(state => state.auth.captchaUrl)\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onSubmit = (formData: LoginFormValuesPropsType) => {\r\n    dispatch(login(formData.email, formData.password, formData.rememberMe, formData.captcha as string));\r\n  }\r\n\r\n    if (isAuth) {\r\n      return <Redirect to='/profile'/>\r\n    }\r\n    return <div>\r\n      <h1>Login</h1>\r\n      <LoginForm onSubmit={onSubmit} captchaUrl={captchaUrl}/>\r\n    </div>\r\n  }\r\n\r\nexport default Login;","import Preloader from '../components/common/Preloader/Preloader';\r\nimport React from 'react';\r\n\r\nexport function withSuspense<WCP>(WrappedComponent: React.ComponentType<WCP>) {\r\n  return (props: WCP) => <React.Suspense fallback={<Preloader/>}>\r\n    <WrappedComponent {...props}/>\r\n  </React.Suspense>\r\n}","import React from \"react\";\r\nimport s from './Error404.module.css'\r\nimport errorImage from '../../../assets/images/404-error.jpg'\r\nimport {Button} from 'antd';\r\n\r\nfunction Error404() {\r\n  return (\r\n    <div className={s.error_block}>\r\n      <img className={s.error_img} src={errorImage} alt=\"404\"/>\r\n      <div className={s.error_text}>\r\n        <div className={s.error_header}>OOOPS! PAGE NOT FOUND...</div>\r\n        <p className={s.error_paragraph}>You must have picked the wrong door because I haven't been able to\r\n          lay my eye on the page you've been searching for.</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Error404;","import React from 'react';\nimport {Redirect, Route, Switch} from 'react-router-dom'\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport News from './components/News/News';\nimport Music from './components/Music/Music';\nimport Settings from './components/Settings/Settings';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport Login from './components/Login/Login';\nimport {connect} from 'react-redux';\nimport {AppStateType} from './redux/redux-store';\nimport {initializeApp} from './redux/app-reducer/app-reducer';\nimport Preloader from './components/common/Preloader/Preloader';\nimport {withSuspense} from './hoc/withSuspense';\nimport Error404 from './components/common/Error404/Error404';\nimport 'antd/dist/antd.css';\n// import UsersPage from './components/Users/UsersContainer';\n// import DialogsContainer from './components/Dialogs/DialogsContainer';\n// import UsersContainer from './components/Users/UsersContainer';\n// import ProfileContainer from './components/Profile/ProfileContainer';\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst UsersPage = React.lazy(() => import('./components/Users/UsersPage'));\nconst ProfilePage = React.lazy(() => import('./components/Profile/Profile'));\n\n\n\nconst PATH = {\n  Root: '/',\n  Profile: '/profile',\n  UserProfile: '/profile/:userId?',\n  Dialogs: '/dialogs',\n  Users: '/users',\n  Login: '/login'\n}\n\ntype MapStatePropsType = {\n  initialized: boolean\n}\ntype MapDispatchPropsType = {\n  initializeApp: () => void\n}\ntype AppPropsType = MapStatePropsType & MapDispatchPropsType\n\nconst SuspendedProfile = withSuspense(ProfilePage);\nconst SuspendedDialogs = withSuspense(DialogsContainer);\nconst SuspendedUsers = withSuspense(UsersPage);\n\nclass App extends React.Component<AppPropsType> {\n  componentDidMount() {\n    this.props.initializeApp();\n  }\n\n  render() {\n    if (!this.props.initialized) {\n      return <Preloader/>\n    }\n    return (\n      <>\n        <div className='app-wrapper'>\n          <HeaderContainer/>\n          <Navbar/>\n          <div className='app-wrapper-content'>\n            <Switch>\n              <Route exact path={PATH.Root} render={() => <Redirect to={PATH.Profile}/>}/>\n              <Route path={PATH.UserProfile} render={() => <SuspendedProfile/>}/>\n              <Route path={PATH.Dialogs} render={() => <SuspendedDialogs/>}/>\n              <Route path={PATH.Users} render={() => <SuspendedUsers/>}/>\n              <Route path='/news' render={() => <News/>}/>\n              <Route path='/music' render={() => <Music/>}/>\n              <Route path='/settings' render={() => <Settings/>}/>\n              <Route path={PATH.Login} render={() => <Login/>}/>\n              <Route path='*' render={() => <Error404/>}/>\n            </Switch>\n          </div>\n        </div>\n\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => ({\n  initialized: state.app.initialized\n})\nexport default connect<MapStatePropsType, MapDispatchPropsType, {}, AppStateType>(\n  mapStateToProps,\n  {initializeApp}\n)(App);\n","import React from 'react';\nimport './index.css';\nimport store from './redux/redux-store'\nimport App from './App';\nimport {HashRouter} from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\n\nlet rerenderEntireTree = () => {\n    ReactDOM.render(\n        <HashRouter>\n          <Provider store={store}>\n                <App />\n          </Provider>\n        </HashRouter>, document.getElementById('root')\n    );\n}\n\nrerenderEntireTree();\n\nstore.subscribe(() => {\n    rerenderEntireTree()\n});\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__Qc8HG\",\"login_block\":\"Header_login_block__4ec_F\",\"login\":\"Header_login__2-sLY\",\"logo\":\"Header_logo__1pRGz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error_block\":\"Error404_error_block__25Ffi\",\"error_img\":\"Error404_error_img__2MllA\",\"error_text\":\"Error404_error_text__VurHC\",\"error_header\":\"Error404_error_header__W6Rt4\",\"error_paragraph\":\"Error404_error_paragraph__1e-pz\"};","export type FieldValidatorType = (value: string) => undefined | string\r\n\r\nexport const required: FieldValidatorType = (value) => {\r\n  return value ? undefined : 'Field is required'\r\n}\r\n\r\nexport const maxLengthValidatorCreator = (max: number): FieldValidatorType => (value) => {\r\n  return (value && value.length > max) ? `Field can't be more than ${max} symbols` : undefined\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__3gxOg\",\"error\":\"FormControls_error__6tueN\",\"errorSubmit\":\"FormControls_errorSubmit__RqJa1\"};","import preloader from '../../../assets/images/preloader.gif';\r\nimport React, {FC} from 'react';\r\n\r\ntype PreloaderPropsType = {\r\n\r\n}\r\n\r\nconst Preloader: FC<PreloaderPropsType> = function (props) {\r\n    return (\r\n        <div>\r\n            <img src={preloader} alt=\"Preloader\"/>\r\n        </div>\r\n    )\r\n}\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend\":\"Friend_friend__3PsN9\",\"avatar\":\"Friend_avatar__2xJil\",\"name\":\"Friend_name__6Tgbo\"};","import axios from 'axios';\r\nimport {\r\n  Nullable,\r\n  PhotosType,\r\n  ProfileType, UserType\r\n} from '../redux/types/types';\r\n\r\n\r\nexport enum ResultCodes {\r\n  Success = 0,\r\n  Error = 1,\r\n}\r\nexport enum ResultCodeForCaptcha {\r\n  CaptchaIsRequired = 10\r\n}\r\nexport type ApiResponseType<T = {}, RC = ResultCodes> = {\r\n  data: T\r\n  messages: Array<string>\r\n  resultCode: RC\r\n}\r\nexport type AuthDataType = {\r\n  id: number\r\n  email: string\r\n  login: string\r\n}\r\nexport type UsersResponseDataType = {\r\n  items: Array<UserType>\r\n  totalCount: number\r\n  error: string\r\n}\r\n\r\n\r\n\r\nconst instance = axios.create({\r\n  baseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n  withCredentials: true,\r\n  headers: {\r\n    'API-KEY': 'bcb04db8-51e3-4a52-abad-1b8669db5951'\r\n  }\r\n})\r\n\r\nexport const usersAPI = {\r\n   getUsers(currentPage: number, pageSize: number, term: string = '', friend: Nullable<boolean> = null) {\r\n    return instance.get<UsersResponseDataType>(`users?page=${currentPage}&count=${pageSize}&term=${term}` + (friend === null ? '' : `&friend=${friend}`))\r\n      .then(res => res.data)\r\n  },\r\n  followUsers(userId: number) {\r\n    return instance.post<ApiResponseType>(`follow/${userId}`)\r\n      .then(res => res.data)\r\n  },\r\n  unfollowUsers(userId: number) {\r\n    return instance.delete<ApiResponseType>(`follow/${userId}`)\r\n      .then(res => res.data)\r\n  }\r\n}\r\n\r\nexport const authAPI = {\r\n  getAuth() {\r\n    return instance.get<ApiResponseType<AuthDataType>>(`auth/me`)\r\n      .then(res => res.data)\r\n  },\r\n  login(email: string, password: string, rememberMe: boolean, captcha: Nullable<string> = null) {\r\n    return instance.post<ApiResponseType<{userId: number}, ResultCodes | ResultCodeForCaptcha>>(`/auth/login`, {email, password, rememberMe, captcha})\r\n      .then(res => res.data)\r\n  },\r\n  logout() {\r\n    return instance.delete<ApiResponseType>(`/auth/login`)\r\n      .then(res => res.data)\r\n  }\r\n}\r\n\r\nexport const profileAPI = {\r\n  getUserProfile(userId: number) {\r\n    return instance.get<ProfileType>(`profile/${userId}`)\r\n      .then(res => res.data)\r\n  },\r\n  getStatus(userId: number) {\r\n    return instance.get<string>(`profile/status/${userId}`)\r\n      .then(res => res.data)\r\n  },\r\n  updateStatus(status: string) {\r\n    return instance.put<ApiResponseType>(`profile/status`, {status})\r\n      .then(res => res.data)\r\n  },\r\n  uploadPhoto(photo: File) {\r\n    let formData = new FormData();\r\n    formData.append('image', photo)\r\n    return instance.put<ApiResponseType<{photos: PhotosType}>>('profile/photo',\r\n      formData, {\r\n      headers: {'Content-Type': 'multipart/form-data'}\r\n    }).then(res => res.data)\r\n  },\r\n  updateProfile(profile: ProfileType) {\r\n    return instance.put<ApiResponseType>(`profile`, profile)\r\n      .then(res => res.data)\r\n  }\r\n}\r\n\r\nexport const securityAPI = {\r\n  getCaptcha() {\r\n    return instance.get<{url: string}>('security/get-captcha-url')\r\n      .then(res => res.data)\r\n  }\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friends__section\":\"Friends_friends__section___elUS\"};","import {profileAPI, ResultCodes} from '../../api/api';\r\nimport {ThunkAction} from 'redux-thunk';\r\nimport {AppStateType} from '../redux-store';\r\nimport {stopSubmit} from 'redux-form';\r\nimport {FormAction} from 'redux-form/lib/actions';\r\nimport {InferActionsTypes, PhotosType, PostType, ProfileType, ThunkType} from '../types/types';\r\n\r\nenum actions {\r\n  ADD_POST = 'samurai-network/profile/ADD-POST',\r\n  SET_USER_PROFILE = 'samurai-network/profile/SET-USER-PROFILE',\r\n  SET_STATUS = 'samurai-network/profile/SET-STATUS',\r\n  SAVE_PHOTO_SUCCESS = 'samurai-network/profile/SAVE_PHOTO_SUCCESS',\r\n  SET_EDIT_MODE_PROFILE = 'samurai-network/profile/SET_EDIT_MODE_PROFILE'\r\n}\r\n\r\nexport const profileActions = {\r\n  addPost: (post: string) => ({type: actions.ADD_POST, post} as const),\r\n  setUserProfile: (profile: ProfileType) => ({type: actions.SET_USER_PROFILE, profile} as const),\r\n  setStatus: (status: string) => ({type: actions.SET_STATUS, status} as const),\r\n  savePhotoSuccess: (photos: PhotosType) => ({type: actions.SAVE_PHOTO_SUCCESS, photos} as const),\r\n  setEditModeProfile: (editMode: boolean) => ({type: actions.SET_EDIT_MODE_PROFILE, editMode} as const)\r\n}\r\n\r\nexport type ProfileActionsType = InferActionsTypes<typeof profileActions>\r\ntype ThunkActionsType = ProfileActionsType | FormAction\r\n\r\n// T h u n k  C r e a t o r s\r\nexport type ProfileThunkType = ThunkType<ThunkActionsType>\r\nexport const getUserProfile = (userId: number): ProfileThunkType => {\r\n  return async (dispatch) => {\r\n    const data = await profileAPI.getUserProfile(userId);\r\n    dispatch(profileActions.setUserProfile(data));\r\n  }\r\n}\r\nexport const getStatus = (userId: number): ProfileThunkType => {\r\n  return async (dispatch) => {\r\n    const data = await profileAPI.getStatus(userId);\r\n    dispatch(profileActions.setStatus(data))\r\n  }\r\n}\r\nexport const updateStatus = (status: string): ProfileThunkType => {\r\n  return async (dispatch) => {\r\n    const data = await profileAPI.updateStatus(status);\r\n    if (data.resultCode === ResultCodes.Success) {\r\n      dispatch(profileActions.setStatus(status))\r\n    }\r\n  }\r\n}\r\nexport const savePhoto = (photo: File): ProfileThunkType => {\r\n  return async (dispatch) => {\r\n    const data = await profileAPI.uploadPhoto(photo);\r\n    if (data.resultCode === ResultCodes.Success) {\r\n      dispatch(profileActions.savePhotoSuccess(data.data.photos))\r\n    }\r\n  }\r\n}\r\nexport const saveProfile = (profile: ProfileType): ProfileThunkType => {\r\n  return async (dispatch, getState: () => AppStateType) => {\r\n    const data = await profileAPI.updateProfile(profile);\r\n    if (data.resultCode === ResultCodes.Success) {\r\n      const userId = getState().auth.id;\r\n      await dispatch(getUserProfile(userId as number))\r\n      dispatch(profileActions.setEditModeProfile(false))\r\n    } else {\r\n      const message = data.messages[0]\r\n      dispatch(stopSubmit('edit-profile', {_error: message}))\r\n    }\r\n  }\r\n}\r\n\r\n\r\n// I n i t i a l    S t a t e\r\nlet initialState = {\r\n  posts: [\r\n    {\r\n      id: 1,\r\n      message: 'Hey, how are you?',\r\n      likesCount: 15,\r\n      avatar: 'https://i.pinimg.com/originals/32/3b/c2/323bc2e28f35a760b8d7afe48f3ffe48.png'\r\n    },\r\n    {\r\n      id: 2,\r\n      message: 'This is my first post',\r\n      likesCount: 25,\r\n      avatar: 'https://i.pinimg.com/originals/5a/f1/dd/5af1ddcde07255e8a999abcc061dd201.png'\r\n    }\r\n  ] as Array<PostType>,\r\n  profile: {} as ProfileType,\r\n  status: '',\r\n  editMode: false\r\n}\r\nexport type ProfileInitialStateType = typeof initialState;\r\n\r\n\r\n// R e d u c e r\r\nlet profileReducer = (state = initialState, action: ProfileActionsType): ProfileInitialStateType => {\r\n  switch (action.type) {\r\n    case actions.ADD_POST:\r\n      let newPost = {\r\n        id: 5,\r\n        message: action.post,\r\n        likesCount: 0,\r\n        avatar: 'https://finance.kz/static/images/default-avatar.png'\r\n      }\r\n      return {\r\n        ...state,\r\n        posts: [...state.posts, newPost],\r\n      }\r\n    case actions.SET_USER_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: action.profile\r\n      };\r\n    case actions.SET_STATUS:\r\n      return {\r\n        ...state,\r\n        status: action.status\r\n      }\r\n    case actions.SAVE_PHOTO_SUCCESS:\r\n      return {\r\n        ...state,\r\n        profile: {\r\n          ...state.profile,\r\n          photos: action.photos\r\n        }\r\n      }\r\n    case actions.SET_EDIT_MODE_PROFILE:\r\n      return {\r\n        ...state,\r\n        editMode: action.editMode\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\nexport default profileReducer;"],"sourceRoot":""}