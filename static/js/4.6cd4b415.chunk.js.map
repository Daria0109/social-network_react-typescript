{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatus/ProfileStatusWithHooks.tsx","components/Profile/ProfileData/SocialContact.tsx","components/Profile/ProfileData/ProfileData.tsx","components/Profile/ProfileData/SocialContactForm.tsx","components/Profile/ProfileData/ProfileDataForm.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/Profile.tsx"],"names":["module","exports","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onBlur","updateStatus","autoFocus","onChange","e","currentTarget","onDoubleClick","SocialContact","title","socialLink","className","s","social","ProfileData","data","isOwner","onClick","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","keys","contacts","map","key","SocialContactForm","createForm","Input","ProfileDataForm","reduxForm","form","onSubmit","handleSubmit","Textarea","type","error","errorSubmit","ProfileInfo","profile","savePhoto","saveProfile","setEditModeProfile","c","description","avatar","src","photos","large","userPhoto","alt","target","files","formData","initialValues","Preloader","Post","React","memo","item","message","likesCount","maxLength10","maxLengthValidatorCreator","PostForm","required","MyPosts","dispatch","useDispatch","postsElement","useSelector","state","profilePage","posts","post","id","profileActions","addPost","Profile","history","useHistory","match","useRouteMatch","authorizedUserId","auth","userId","Number","params","getUserProfile","getStatus","photo"],"mappings":"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","file":"static/js/4.6cd4b415.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"image\":\"ProfileInfo_image__2da8F\",\"description\":\"ProfileInfo_description__1Cu2y\",\"avatar\":\"ProfileInfo_avatar__1oUOk\",\"social\":\"ProfileInfo_social__uj1yE\"};","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__3QidP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2DReY\"};","import React, {ChangeEvent, useEffect, useState} from 'react';\r\n\r\n\r\ntype ProfileStatusPropsType = {\r\n  status: string\r\n  updateStatus: (status: string) => void\r\n}\r\n\r\nconst ProfileStatusWithHooks =(props: ProfileStatusPropsType) => {\r\n  const[editMode, setEditMode] = useState(false);\r\n  const[status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus((props.status))\r\n  }, [props.status])\r\n\r\n  const onEditMode = () => {\r\n    setEditMode(true)\r\n  }\r\n  const offEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status)\r\n  }\r\n  const changeStatus = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setStatus(e.currentTarget.value)\r\n  }\r\n    return <>\r\n      {editMode\r\n        ? <div>\r\n          <input value={status}\r\n                 onBlur={offEditMode}\r\n                 autoFocus\r\n                 onChange={changeStatus}/>\r\n        </div>\r\n        : <div>\r\n          <span onDoubleClick={onEditMode}><b>{props.status || 'No status...'}</b></span>\r\n        </div>}\r\n    </>\r\n\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './../ProfileInfo/ProfileInfo.module.css'\r\n\r\ntype SocialContactPropsType = {\r\n  title: string\r\n  socialLink: string\r\n}\r\nconst SocialContact: React.FC<SocialContactPropsType> = ({title, socialLink}) => {\r\n  return (\r\n    <div className={s.social}><b>{title}:</b> {socialLink}</div>\r\n  )\r\n}\r\nexport default SocialContact;","import React from 'react';\r\nimport SocialContact from './SocialContact';\r\nimport {ProfileType} from '../../../redux/types/types';\r\n\r\ntype ProfileDataPropsType = {\r\n  data: ProfileType\r\n  isOwner: boolean\r\n  setEditMode: (mode: boolean) => void\r\n}\r\n\r\nconst ProfileData: React.FC<ProfileDataPropsType> = ({data, isOwner, setEditMode}) => {\r\n  return <div>\r\n    {isOwner && <button onClick={() => setEditMode(true)}>Edit Profile</button>}\r\n    <div>Full name: {data.fullName}</div>\r\n    <div>About Me: {data.aboutMe}</div>\r\n    <div>Look for a job: {data.lookingForAJob ? 'Yes' : 'No'}</div>\r\n    <div>My skills: {data.lookingForAJobDescription}</div>\r\n    <div>Contacts: </div>\r\n    {Object.keys(data.contacts).map(key =>\r\n      <SocialContact key={key} title={key} socialLink={data.contacts[key]}/>)}\r\n  </div>\r\n\r\n}\r\nexport default ProfileData;","import React from 'react';\r\nimport s from './../ProfileInfo/ProfileInfo.module.css'\r\nimport {createForm, Input} from '../../common/FormControls/FormControls';\r\n\r\ntype SocialContactPropsType = {\r\n  title: string\r\n  socialLink: string\r\n}\r\nconst SocialContactForm: React.FC<SocialContactPropsType> = ({title, socialLink}) => {\r\n  return (\r\n    <div className={s.social}>\r\n      {createForm(Input, `contacts.${title}`, title, [])}\r\n    </div>\r\n  )\r\n}\r\nexport default SocialContactForm;","import React from 'react';\r\nimport {DecoratedComponentClass, DecoratedFormProps, InjectedFormProps, reduxForm} from 'redux-form';\r\nimport {createForm, Input, Textarea} from '../../common/FormControls/FormControls';\r\nimport SocialContactForm from './SocialContactForm';\r\nimport s from '../../common/FormControls/FormControls.module.css';\r\nimport {ProfileType} from '../../../redux/types/types';\r\n\r\ntype ProfileDataFormPropsType = {\r\n  data: ProfileType\r\n}\r\nexport type ProfileTypeKeys = Extract<keyof ProfileType, string>\r\n\r\nconst ProfileDataForm:  DecoratedComponentClass<ProfileType, DecoratedFormProps<ProfileType, ProfileDataFormPropsType>> =\r\n  reduxForm<ProfileType, ProfileDataFormPropsType>({form: 'edit-profile'})(\r\n  (props) => {\r\n  return <form onSubmit={props.handleSubmit}>\r\n    <div>Full name: {createForm<ProfileTypeKeys>(Input, 'fullName', 'Name...', [])}</div>\r\n    <div>About Me: {createForm<ProfileTypeKeys>(Textarea, 'aboutMe', 'About me...', [])}</div>\r\n    <div>Look for a job: {createForm<ProfileTypeKeys>('input', 'lookingForAJob', null, [], {type: 'checkbox'})}</div>\r\n    <div>My skills: {createForm<ProfileTypeKeys>(Textarea, 'lookingForAJobDescription', 'My skills...', [])}</div>\r\n    <div>Contacts: </div>\r\n    {Object.keys(props.data.contacts).map(key =>\r\n      <SocialContactForm key={key} title={key} socialLink={props.data.contacts[key]}/>)}\r\n\r\n    {props.error && <div className={s.errorSubmit}>{props.error}</div>}\r\n    <button onClick={() => {}}>Save</button>\r\n  </form>\r\n\r\n})\r\nexport default ProfileDataForm;","import React, {ChangeEvent, FC, useState} from 'react';\r\nimport c from './ProfileInfo.module.css'\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport userPhoto from '../../../assets/images/default-avatar.png'\r\nimport ProfileStatusWithHooks from './ProfileStatus/ProfileStatusWithHooks';\r\nimport ProfileData from '../ProfileData/ProfileData';\r\nimport ProfileDataForm from '../ProfileData/ProfileDataForm';\r\nimport {ProfileType} from '../../../redux/types/types';\r\n\r\ntype ProfileInfoPropsType = {\r\n  profile: ProfileType\r\n  status: string\r\n  updateStatus: (status: string) => void\r\n  isOwner: boolean\r\n  savePhoto: (photo: File) => void\r\n  saveProfile: (profile: ProfileType) => void\r\n  editMode: boolean\r\n  setEditModeProfile: (editMode: boolean) => void\r\n}\r\n\r\nconst ProfileInfo: FC<ProfileInfoPropsType> = function ({profile, status,\r\n                                                          updateStatus, isOwner, savePhoto,\r\n                                                          saveProfile, editMode, setEditModeProfile}) {\r\n  // const [editMode, setEditMode] = useState(false);\r\n\r\n  const onSubmit = (formData: ProfileType) => {\r\n    saveProfile(formData)\r\n  }\r\n\r\n  const onLoadPhoto = (e: ChangeEvent<HTMLInputElement>) => {\r\n    if (e.target.files?.length) {\r\n      savePhoto(e.target.files![0])\r\n    }\r\n  }\r\n\r\n  if (!Object.keys(profile).length) {\r\n    return <Preloader/>\r\n  }\r\n  return (\r\n    <div>\r\n      {/*<div className={c.image_item}>*/}\r\n      {/*  <img className={c.image} src=\"https://miro.medium.com/max/8576/0*zBu6EBAwjXXXHz-z\" alt=\"Image\"/>*/}\r\n      {/*</div>*/}\r\n\r\n      <div className={c.description}>\r\n        <img className={c.avatar} src={profile.photos.large ? profile.photos.large : userPhoto} alt=\"Avatar\"/>\r\n        {isOwner &&\r\n        <div>\r\n          <input type='file' onChange={onLoadPhoto}/>\r\n        </div>}\r\n        <ProfileStatusWithHooks status={status}\r\n                                   updateStatus={updateStatus}/>\r\n        <hr/>\r\n        {editMode\r\n        ? <ProfileDataForm data={profile}\r\n                           onSubmit={onSubmit}\r\n                           initialValues={profile}/>\r\n        : <ProfileData data={profile}\r\n                       isOwner={isOwner}\r\n                       setEditMode={setEditModeProfile}/>\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport c from './Post.module.css'\r\nimport {PostType} from '../../../../redux/types/types';\r\n\r\nconst Post = React.memo((props: PostType) => {\r\n        return (\r\n        <div className={c.item}>\r\n            <img src={props.avatar} alt=\"Avatar\"/>\r\n            {props.message}\r\n            <div>\r\n                <span>{props.likesCount} likes</span>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\nexport default Post","import React from 'react';\r\nimport c from './MyPosts.module.css'\r\nimport Post from './Post/Post';\r\nimport {profileActions, ProfileInitialStateType} from '../../../redux/profile-reducer/profile-reducer'\r\nimport {reduxForm, DecoratedComponentClass, DecoratedFormProps} from 'redux-form';\r\nimport {maxLengthValidatorCreator, required} from '../../utilities/validators/validators';\r\nimport {createForm, Textarea} from '../../common/FormControls/FormControls';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStateType} from '../../../redux/redux-store';\r\n\r\nconst maxLength10 = maxLengthValidatorCreator(10)\r\n\r\nconst PostForm: DecoratedComponentClass<PostFormValuesPropsType, DecoratedFormProps<PostFormValuesPropsType>> =\r\n  reduxForm<PostFormValuesPropsType, {}>({form: 'post'})(({handleSubmit}) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      {createForm<PostFormKeysType>(Textarea, 'post', 'New post...', [required, maxLength10])}\r\n      <div>\r\n        <button>Add Post</button>\r\n      </div>\r\n    </form>\r\n  )\r\n})\r\n\r\n\r\ntype PostFormValuesPropsType = {\r\n  post: string\r\n}\r\ntype PostFormKeysType = Extract<keyof PostFormValuesPropsType, string>\r\n\r\nconst MyPosts = React.memo(() =>  {\r\n  const dispatch = useDispatch();\r\n  const profilePage = useSelector<AppStateType, ProfileInitialStateType>(state => state.profilePage);\r\n\r\n  const onAddPost = (value: PostFormValuesPropsType) => {\r\n    dispatch(profileActions.addPost(value.post));\r\n  }\r\n\r\n  const postsElement = profilePage.posts.map(post =>\r\n    <Post key={post.id} id={post.id}\r\n          avatar={post.avatar}\r\n          message={post.message}\r\n          likesCount={post.likesCount}/>)\r\n  return (\r\n    <div className={c.posts}>\r\n      <PostForm onSubmit={onAddPost}/>\r\n      {postsElement}\r\n    </div>\r\n  )\r\n})\r\nexport default MyPosts","import React, {useEffect} from 'react';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPosts from './MyPosts/MyPosts';\r\nimport {Nullable, ProfileType} from '../../redux/types/types';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStateType} from '../../redux/redux-store';\r\nimport {\r\n  profileActions,\r\n  savePhoto,\r\n  saveProfile,\r\n  updateStatus,\r\n  getUserProfile,\r\n  getStatus\r\n} from '../../redux/profile-reducer/profile-reducer';\r\nimport {useHistory, useRouteMatch} from 'react-router-dom';\r\n\r\ninterface MatchParams {\r\n  userId: string;\r\n}\r\nexport type ProfilePropsType = {\r\n}\r\n\r\nconst Profile: React.FC<ProfilePropsType> = function ({}) {\r\n  const history = useHistory();\r\n  const match = useRouteMatch<MatchParams>('/profile/:userId?');\r\n\r\n  const profile = useSelector<AppStateType, ProfileType>(state => state.profilePage.profile);\r\n  const status = useSelector<AppStateType, string>(state => state.profilePage.status);\r\n  const editMode = useSelector<AppStateType, boolean>(state => state.profilePage.editMode);\r\n  const authorizedUserId = useSelector<AppStateType, Nullable<number>>(state => state.auth.id);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    let userId = Number(match?.params.userId);\r\n      if (!userId) {\r\n        userId = authorizedUserId as number;\r\n        if (!userId) {\r\n          history.push('/login')\r\n        }\r\n      }\r\n\r\n    dispatch(getUserProfile(userId));\r\n    dispatch(getStatus(userId))\r\n  }, [match?.params.userId])\r\n\r\n  const onUpdateStatus = (status: string) => {\r\n    dispatch(updateStatus(status))\r\n  }\r\n  const onSavePhoto = (photo: File) => {\r\n    dispatch(savePhoto(photo))\r\n  }\r\n  const onSaveProfile = (profile: ProfileType) => {\r\n    dispatch(saveProfile(profile))\r\n  }\r\n  const onSetEditModeProfile = (editMode: boolean) => {\r\n    dispatch(profileActions.setEditModeProfile((editMode)))\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <ProfileInfo isOwner={!match?.params.userId}\r\n                   profile={profile}\r\n                   status={status}\r\n                   updateStatus={onUpdateStatus}\r\n                   savePhoto={onSavePhoto}\r\n                   saveProfile={onSaveProfile}\r\n                   editMode={editMode}\r\n                   setEditModeProfile={onSetEditModeProfile}/>\r\n      <MyPosts/>\r\n    </div>\r\n  )\r\n}\r\nexport default Profile"],"sourceRoot":""}